memory.flash = 'rxp 0x00000000-0x000fffff'
memory.ram   = 'rw 0x20000000-0x2003ffff'
stack = 0x8000
heap = 0x32000

runtime = 'armv7m-sys'
output.ld = 'bb.ld'
output.h = 'bb.h'
output.c = 'bb.c'
output.mk.path = 'Makefile'
output.mk.define.NRF52840_XXAA=1
output.mk.define.NRFX_UARTE_ENABLED=1
output.mk.define.NRFX_UARTE0_ENABLED=1
output.mk.define.NRFX_CLOCK_ENABLED=1
output.mk.define.NRFX_TIMER_ENABLED=1
output.mk.define.NRFX_TIMER0_ENABLED=1
output.mk.c_flags = ['-include wasm_config.h']
output.mk.srcs = [
    '.',
    'nrfx/drivers/src',
    'wamr-core',
    'wamr-core/utils',
    'wamr-core/common',
    'wamr-core/interpreter',
    'wamr-core/aot',
]
output.mk.incs = [
    '.',
    'nrfx',
    'cmsis',
    'nrfx/drivers/include',
    'nrfx/mdk',
    'nrfx/templates',
    'wamr-core',
    'wamr-core/include',
    'wamr-core/utils',
    'wamr-core/common',
    'wamr-core/interpreter',
    'wamr-core/aot',
]

export.__box_irq0_handler.alias = 'POWER_CLOCK_IRQHandler'
export.__box_irq0_handler.type = 'fn() -> void'
export.__box_irq8_handler.alias = 'TIMER0_IRQHandler'
export.__box_irq8_handler.type = 'fn() -> void'

export.__box_write = 'fn(i32, const u8[size], usize size) -> errsize'
export.sys_ping = 'fn(i32) -> err32'

import.box1_ping = 'fn(i32) -> err32'
import.box1_ping_import = 'fn(i32) -> err32'
import.box1_ping_abort = 'fn(i32) -> err32'
import.box1_hello = 'fn() -> err'

import.box2_ping = 'fn(i32) -> err32'
import.box2_ping_import = 'fn(i32) -> err32'
import.box2_ping_abort = 'fn(i32) -> err32'
import.box2_hello = 'fn() -> err'

import.box3_ping = 'fn(i32) -> err32'
import.box3_ping_import = 'fn(i32) -> err32'
import.box3_ping_abort = 'fn(i32) -> err32'
import.box3_hello = 'fn() -> err'

[box.box1]
runtime.runtime = 'wamr'
runtime.wamr.aot = false
runtime.wamr.interp_stack = 0x400
stack = 0x4000
memory.flash = 'rxp 0x8000'

output.wasm_h = 'bb.h'
output.wasm_c = 'bb.c'
output.mk.path = 'Makefile'
output.mk.wamrc = '../wamr/wamr-compiler/build/wamrc'
output.mk.wasi_sdk = '../wasi-sdk'
output.mk.wabt = '../wabt'

import.sys_ping  = 'fn(i32) -> err32'

export.box1_ping = 'fn(i32) -> err32'
export.box1_ping_import = 'fn(i32) -> err32'
export.box1_ping_abort = 'fn(i32) -> err32'
export.box1_hello = 'fn() -> err'

[box.box2]
runtime.runtime = 'wamr'
runtime.wamr.aot = false
runtime.wamr.interp_stack = 0x400
stack = 0x4000
memory.flash = 'rxp 0x8000'

output.wasm_h = 'bb.h'
output.wasm_c = 'bb.c'
output.mk.path = 'Makefile'
output.mk.wamrc = '../wamr/wamr-compiler/build/wamrc'
output.mk.wasi_sdk = '../wasi-sdk'
output.mk.wabt = '../wabt'

import.sys_ping  = 'fn(i32) -> err32'

export.box2_ping = 'fn(i32) -> err32'
export.box2_ping_import = 'fn(i32) -> err32'
export.box2_ping_abort = 'fn(i32) -> err32'
export.box2_hello = 'fn() -> err'

[box.box3]
runtime.runtime = 'wamr'
runtime.wamr.aot = false
runtime.wamr.interp_stack = 0x400
stack = 0x4000
memory.flash = 'rxp 0x8000'

output.wasm_h = 'bb.h'
output.wasm_c = 'bb.c'
output.mk.wamrc = '../wamr/wamr-compiler/build/wamrc'
output.mk.path = 'Makefile'
output.mk.wasi_sdk = '../wasi-sdk'
output.mk.wabt = '../wabt'

import.sys_ping  = 'fn(i32) -> err32'

export.box3_ping = 'fn(i32) -> err32'
export.box3_ping_import = 'fn(i32) -> err32'
export.box3_ping_abort = 'fn(i32) -> err32'
export.box3_hello = 'fn() -> err'

